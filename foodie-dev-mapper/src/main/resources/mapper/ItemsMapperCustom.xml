<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yellowrq.mapper.ItemsMapperCustom" >
  <select id="queryItemComments" parameterType="Map" resultType="com.yellowrq.pojo.vo.ItemCommentVO">
    select
      ic.comment_level as commentLevel,
      ic.content as content,
      ic.sepc_name as sepcName,
      ic.created_time as createdTime,
      u.face as userFace,
      u.nickname as nickname
    from items_comments ic
    left join users u on u.id = ic.user_id
    where ic.item_id = #{paramsMap.itemId}
    <if test=" paramsMap.level != null and paramsMap.level != '' ">
      and ic.comment_level = #{paramsMap.level}
    </if>
  </select>

  <select id="searchItems" parameterType="Map" resultType="com.yellowrq.pojo.vo.SearchItemsVO">
    SELECT
      i.id as itemId,
      i.item_name as itemName,
      i.sell_counts as sellCounts,
      ii.url as imgUrl,
      tempSpec.price_discount as price
    FROM
      items i
    LEFT JOIN
      items_img ii
    ON
      i.id = ii.item_id
    LEFT JOIN
      (SELECT item_id,min(price_discount) as price_discount FROM items_spec GROUP BY item_id) as tempSpec
    ON
      i.id = tempSpec.item_id
    WHERE
      ii.is_main = 1
      <if test=" paramsMap.keywords != null and paramsMap.keywords != '' ">
          AND i.item_name like '%${paramsMap.keywords}%'
      </if>
      order by
      <choose>
        <when test=" paramsMap.sort == &quot;c&quot;  ">
          i.sell_counts desc
        </when>
        <when test=" paramsMap.sort == &quot;p&quot; ">
          tempSpec.price_discount asc
        </when>
        <otherwise>
          i.item_name asc
        </otherwise>
      </choose>
  </select>
  <!--
        k:默认，代表默认排序，根据name
    c:根据销量排序
     p:根据价格排序
  -->

  <select id="searchItemsByThirdCat" parameterType="Map" resultType="com.yellowrq.pojo.vo.SearchItemsVO">
    SELECT
      i.id as itemId,
      i.item_name as itemName,
      i.sell_counts as sellCounts,
      ii.url as imgUrl,
      tempSpec.price_discount as price
    FROM
      items i
    LEFT JOIN
      items_img ii
    ON
      i.id = ii.item_id
    LEFT JOIN
      (SELECT item_id,min(price_discount) as price_discount FROM items_spec GROUP BY item_id) as tempSpec
    ON
      i.id = tempSpec.item_id
    WHERE
      ii.is_main = 1
    AND
      i.cat_id = #{paramsMap.catId}
    order by
    <choose>
      <when test=" paramsMap.sort == &quot;c&quot;  ">
        i.sell_counts desc
      </when>
      <when test=" paramsMap.sort == &quot;p&quot; ">
        tempSpec.price_discount asc
      </when>
      <otherwise>
        i.item_name asc
      </otherwise>
    </choose>
  </select>
  
  <select id="queryItemsBySpecIds" parameterType="List" resultType="com.yellowrq.pojo.vo.ShopcartVO">
    select
      t_items.id itemId,
      t_items_img.url itemImgUrl,
      t_items.item_name itemName,
      t_items_spec.id specId,
      t_items_spec.name specName,
      t_items_spec.price_discount priceDiscount,
      t_items_spec.price_normal priceNormal
    from
       items_spec t_items_spec
    left join
        items t_items
    on
       t_items_spec.item_id = t_items.id
    left join
       items_img t_items_img
    on
       t_items_img.item_id = t_items.id
    where
       t_items_img.is_main = 1
    and
       t_items_spec.id in 
       <foreach collection="paramsList" index="index" item="specId" open="(" close=")" separator=",">
         #{specId}
       </foreach>
  </select>
</mapper>